<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>English on Lucas Xu</title>
    <link>https://lucashangxu.pw/tags/english/</link>
    <description>Recent content in English on Lucas Xu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 09 Apr 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://lucashangxu.pw/tags/english/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Webpack</title>
      <link>https://lucashangxu.pw/en/2018/04/webpack/</link>
      <pubDate>Mon, 09 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://lucashangxu.pw/en/2018/04/webpack/</guid>
      <description>Introduction At its core, Webpack is a static module bundler for modern JavaScript applications. When Webpack process your application, it recursively builds a dependency graph that includes every module your application needs, then packages all of those modules into one or more bundles.
Core concepts:
 Entry Output Loaders Plugins  Entry An entry point indicates which module Webpack should use to begin building out its internal dependency graph. After entering the entry point, webpack will figure out which other modules and libraries that entry point depends on (directly and indirectly)</description>
    </item>
    
    <item>
      <title>Flarum</title>
      <link>https://lucashangxu.pw/en/2018/03/what-is-flarum/</link>
      <pubDate>Tue, 27 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://lucashangxu.pw/en/2018/03/what-is-flarum/</guid>
      <description>What is Flarum Flarum is a free, open-source forum software based on PHP 5.5+ with a focus on simplicity. References: Flarum – Forums Made Simple Flarum 中文站：优雅简洁的轻论坛 GitHub - flarum/flarum: Delightfully simple forum software. Setup Requirements: - PHP 5.6+ &amp;lt;=7.1 (mbstring, pdo_mysql, openssl, json, gd, dom, fileinfo) - MySQL 5.5+ - A web server: Apache (with mod_rewrite), Nginx, or</description>
    </item>
    
    <item>
      <title>How to Get the Most of FreeCodeCamp</title>
      <link>https://lucashangxu.pw/en/2018/03/how-to-get-the-most-of-freecodecamp/</link>
      <pubDate>Tue, 13 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://lucashangxu.pw/en/2018/03/how-to-get-the-most-of-freecodecamp/</guid>
      <description>Slow Down  Take some extra minutes to try to understand what FreeCodeCamp is trying to teach.
 Take extensive notes at the end of each challenge. It helps you retain the new knowledge.
  Do not Rely Solely on FreeCodeCamp to Learn New Concepts  Make it a habit to learn from other resources.
 You would want to become an expert at everything when learning how to code, not to know just the bare minimum to get a basic website up.</description>
    </item>
    
    <item>
      <title>The TCP/IP Five-Layer Network Model</title>
      <link>https://lucashangxu.pw/en/2018/03/tcp-ip-network-model/</link>
      <pubDate>Fri, 09 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://lucashangxu.pw/en/2018/03/tcp-ip-network-model/</guid>
      <description>Physical Layer Physical layer represents the physical devices that interconnect computers, which includes the specifications for the networking cables and the connectors that join devices together along with specifications how signals are sent over these connections.
Data Link Layer (Network Interface, or Network Access Layer) Data link layer is responsible for defining a common way of interpreting these signals so network devices can communicate.
The most common protocol is called Ethernet, even though wireless technologies are also very common in today’s world.</description>
    </item>
    
    <item>
      <title>Digital Logic</title>
      <link>https://lucashangxu.pw/en/2018/03/digital-logic/</link>
      <pubDate>Wed, 07 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://lucashangxu.pw/en/2018/03/digital-logic/</guid>
      <description>Computer language Computer ( or say, CPU in computer) computes using 0s and 1s at a really fast rate. In other words, it uses a Binary System. (base-2 numeral system)
In computer term, we group binary into 8 numbers or bits. Technically, a bit is a binary digit. Historically, we used 8 bits because in the early days of computing, hardware utilized the base-2 numeral system to move bits around.</description>
    </item>
    
    <item>
      <title>Linked List</title>
      <link>https://lucashangxu.pw/en/2018/02/linked-list/</link>
      <pubDate>Sun, 25 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://lucashangxu.pw/en/2018/02/linked-list/</guid>
      <description>What is a Linked List? A linked list is a linear data structure where each element is a separate object. It is a collection of nodes.
Each element (node) of a list is comprising of two items: the data and a reference to the next node (Singly linked list).
A doubly linked list is a list that has two two references, one to the next node and another previous node.</description>
    </item>
    
    <item>
      <title>Code Coverage in Python</title>
      <link>https://lucashangxu.pw/en/2018/02/code-coverage-in-python/</link>
      <pubDate>Fri, 23 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://lucashangxu.pw/en/2018/02/code-coverage-in-python/</guid>
      <description>What is Code Coverage? In short, Code Coverage testing is determining how much code is tested.
 Test coverage is a measured used to describe the degree to which source code of a program is executed when a particular test suits runs. &amp;mdash; Wikipedia Code coverage - Wikipedia
 Why Test Code Coverage? Code coverage testing helps you to figure out how well your tests actually test your code. Especially when the code base is large, it lets you have a clear understanding of how well your tests have been written.</description>
    </item>
    
    <item>
      <title>Why Writing a Blog</title>
      <link>https://lucashangxu.pw/en/2018/02/why-write-a-blog/</link>
      <pubDate>Tue, 13 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://lucashangxu.pw/en/2018/02/why-write-a-blog/</guid>
      <description>I read posts on different blogs regularly. For example,
 Coding Horror Home of Feross Aboukhadijeh » Feross.org Joel on Software  Building a great blog is a long-time commitment and it is not an easy one. It is difficult that you do not always know what you would want to write about. In addition, writing in English, which is not my native language, makes the posts not so clear and concise.</description>
    </item>
    
  </channel>
</rss>